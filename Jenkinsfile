pipeline {
    agent any

      environment {
        SONARQUBE_ENV = 'SonarQube'
      }

      stages {
        stage('Checkout ') {
            steps {
                checkout scm
          }
        }

   /*     stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool name: 'Main', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
              withSonarQubeEnv('Main') {
                        sh "${scannerHome}/bin/sonar-scanner"
              }
            }
          }
        }
*/
        stage('Docker Build & Push') {
            steps {
                script {
                    def image = docker.build("ghcr.io/romain-guillemot/whispyrfront")

                    docker.withRegistry('https://ghcr.io', 'GHCR_CREDENTIALS_ID') {
                        image.push("v1.${env.BUILD_NUMBER}")
                        image.push("latest")
                    }
                }
            }
        }


        stage('Tag Git Commit ') {
            steps {
                script {

                    withCredentials([sshUserPrivateKey(credentialsId: 'git', keyFileVariable: 'SSH_KEY')]) {
                        sh '''
                        eval `ssh-agent -s`
                        ssh-add $SSH_KEY
                        git config user.name "jenkins"
                        git config user.email "jenkins@local"
                        git tag "v1.$BUILD_NUMBER"
                        git push origin "v1.$BUILD_NUMBER"
                      '''
                    }

    }
  }
}

          stage('GitHub Release via Shell') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'GH', variable: 'TOKEN')]){
                                sh '''
                        TAG="v1.$BUILD_NUMBER"
                        echo $TAG
                        TAG_MSG="Release generated by Jenkins build #$BUILD_NUMBER"
                        echo $TAG_MSG
                    curl -o release.json -X POST https://api.github.com/repos/Romain-GUILLEMOT/WhispyrFront/releases \\
                      -H "Authorization:Bearer $TOKEN" \\
                      -H "Accept: application/vnd.github+json" \
                      -d '{
                        "tag_name": "'$TAG'",
                        "target_commitish": "main",
                        "name": "'$TAG'",
                        "body": "'$TAG_MSG'",
                        "draft": false,
                        "prerelease": false
                      }
                      '
                      echo "Release response:"
                      cat release.json
                  '''
              }
            }
          }
        }


        stage('Upload Release Asset via Shell') {
            steps {
                script {
                    def tag = "v1.${BUILD_NUMBER}"
              withCredentials([string(credentialsId: 'GH', variable: 'TOKEN')]){
                  sh '''
                   ID=$(grep id release.json  | head -n 1 | cut -d : -f2 | cut -d , -f1 | cut -d ' ' -f2)
                   curl -o asset.json -X POST \
                                    --data-binary @whispyrBack \
                                    -H "Authorization:token $TOKEN" \
                                    -H "Content-Type: application/json" \
                                    -H "Accept: application/vnd.github+json" \
                                    "https://uploads.github.com/repos/Romain-GUILLEMOT/WhispyrFront/releases/$ID/assets?name=WhispyrBack"
                       '''
                   }
            }
          }
        }

      }
    }
